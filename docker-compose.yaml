version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Hasura GraphQL Engine
  graphql-engine:
    image: hasura/graphql-engine:v2.36.0-ce
    ports:
      - "8080:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      PG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # NestJS Backend - NOW PULLS FROM DOCKER HUB
  backend:
    image: carlosrivera22/venmito-backend:latest
    container_name: backend
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_SSL=false
      - HASURA_GRAPHQL_ENDPOINT=http://graphql-engine:8080/v1/graphql
    depends_on:
      - postgres
      - graphql-engine
    networks:
      - app-network
    restart: unless-stopped

  # Next.js Frontend - NOW PULLS FROM DOCKER HUB
  venmito-admin:
    image: carlosrivera22/venmito-admin:latest
    container_name: venmito-admin
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      # For browser requests (client-side)
      - NEXT_PUBLIC_API_URL=http://localhost:5001
      - NEXT_PUBLIC_HASURA_GRAPHQL_ENDPOINT=http://localhost:8080/v1/graphql
      - NEXT_PUBLIC_HASURA_WS_ENDPOINT=ws://localhost:8080/v1/graphql
      # For server-side requests (API routes)
      - API_URL=http://backend:5001
      - HASURA_GRAPHQL_ENDPOINT=http://graphql-engine:8080/v1/graphql
      # Next.js specific environment variables
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
      - graphql-engine
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge